{"version":3,"sources":["api/services.ts","components/pages/Landing.tsx"],"names":["instance","axios","create","baseURL","process","headers","ServicesApi","getData","p","method","url","params","transformResponse","data","JSON","parse","postData","item1","item2","Landing","useContext","GlobalContext","loader","table","searchedData","pageSizeData","ColumnData","loading","setLoading","tableData","setTabledata","filteredData","setFilteredData","pageSize","setPagesize","col","useEffect","fetchData","a","catch","e","then","undefined","className","type","onChange","event","result","value","target","toLowerCase","filter","company_name","search","searchTable","placeholder","rowKey","record","id","columns","dataSource","pagination","showSizeChanger","showLessItems","pageSizeOptions","page","newPageSize"],"mappings":"6NAEMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAASC,wBACTC,QAAS,CACP,eAAgB,8BAgCLC,EA5BK,CAClBC,QAAS,SAACC,GAAD,OACPR,EAAS,CACPS,OAAQ,MACRC,IAAKF,EACLG,OAAQ,GACRC,kBAAmB,CACjB,SAAUC,GAIR,OADaC,KAAKC,MAAMF,QAKhCG,SAAU,kBACRhB,EAAS,CACPS,OAAQ,OACRC,IAAK,OACLG,KAAM,CACJI,MAAO,QACPC,MAAO,SAETb,QAAS,CACP,eAAgB,wB,gCC3BT,SAASc,IACtB,MACEC,qBAAWC,KADLC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,aAAcC,EAAnD,EAAmDA,WAEnD,cAA8BJ,EAA9B,GAAOK,EAAP,KAAgBC,EAAhB,KACA,cAAkCL,EAAlC,GAAOM,EAAP,KAAkBC,EAAlB,KACA,cAAwCN,EAAxC,GAAOO,EAAP,KAAqBC,EAArB,KACA,cAAgCP,EAAhC,GAAOQ,EAAP,KAAiBC,EAAjB,KACOC,EAAP,YAAcT,EAAd,MAsCA,OApBAU,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACOhC,EAAYC,QAAQ,mBAD3B,uBACRM,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAH,qDAKfwB,IACGE,OAAM,SAACC,OACPC,MAAK,SAAC5B,QACQ6B,IAAT7B,IAEFiB,EAAajB,GACbmB,EAAgBnB,GAChBe,GAAW,SAMhB,IAED,sBAAKe,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,4BACA,uBACEC,KAAK,OACLC,SAAU,SAACC,GAAD,OApCI,SAACA,GACnB,IACIC,EADAC,EAAQF,EAAMG,OAAOD,MAAME,cAG/BH,EAASlB,EAAUsB,QAAO,SAACtC,GACzB,OAA0D,IAAnDA,EAAKuC,aAAaF,cAAcG,OAAOL,MAEhDhB,EAAgBe,GA6BSO,CAAYR,IACjCS,YAAY,kBACZZ,UAAU,WAGZ,cAAC,IAAD,CACEa,OAAQ,SAACC,GAAD,OAAiBA,EAAOC,IAChCC,QAASxB,EACTyB,WAAY7B,EACZJ,QAASA,EACTkC,WAAY,CACV5B,SAAUA,EACV6B,iBAAiB,EACjBC,eAAe,EACfC,gBAAiB,CAAC,IAAK,KAAM,KAAM,KAAM,OACzCnB,SAvDmB,SAACoB,EAAWC,GACrChC,EAAYgC","file":"static/js/4.7f429981.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL,\r\n  headers: {\r\n    \"content-type\": \"application/octet-stream\",\r\n  },\r\n});\r\n\r\nconst ServicesApi = {\r\n  getData: (p: string) =>\r\n    instance({\r\n      method: \"GET\",\r\n      url: p,\r\n      params: {},\r\n      transformResponse: [\r\n        function (data) {\r\n          // Do whatever you want to transform the data\r\n          \r\n          const json = JSON.parse(data);\r\n          return json;\r\n        },\r\n      ],\r\n    }),\r\n  postData: () =>\r\n    instance({\r\n      method: \"POST\",\r\n      url: \"/api\",\r\n      data: {\r\n        item1: \"data1\",\r\n        item2: \"item2\",\r\n      },\r\n      headers: {\r\n        \"content-type\": \"application/json\", // override instance defaults\r\n      },\r\n    }),\r\n};\r\nexport default ServicesApi;","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport ServicesApi from \"../../api/services\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport { Table } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nexport default function Landing() {\r\n  const { loader, table, searchedData, pageSizeData, ColumnData } =\r\n    useContext(GlobalContext);\r\n  const [loading, setLoading] = loader;\r\n  const [tableData, setTabledata] = table;\r\n  const [filteredData, setFilteredData] = searchedData;\r\n  const [pageSize, setPagesize] = pageSizeData;\r\n  const [col] = ColumnData;\r\n\r\n  //Lets change Page\r\n  const onPaginationChange = (page: any, newPageSize: any) => {\r\n    setPagesize(newPageSize);\r\n  };\r\n\r\n  const searchTable = (event: any) => {\r\n    let value = event.target.value.toLowerCase();\r\n    let result = [];\r\n\r\n    result = tableData.filter((data: any) => {\r\n      return data.company_name.toLowerCase().search(value) !== -1;\r\n    });\r\n    setFilteredData(result);\r\n  };\r\n\r\n  // useEffect as ComponentWillMount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const { data } = await ServicesApi.getData(\"/MOCK_DATA.json\");\r\n      return data;\r\n    };\r\n\r\n    fetchData()\r\n      .catch((e) => {})\r\n      .then((data) => {\r\n        if (data !== undefined) {\r\n          //do something\r\n          setTabledata(data);\r\n          setFilteredData(data);\r\n          setLoading(false);\r\n        } else {\r\n          //do something else\r\n        }\r\n      });\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"dataTable\">\r\n      <div className=\"companyDetails\">Companies List</div>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(event) => searchTable(event)}\r\n        placeholder=\"Search Company \"\r\n        className=\"search\"\r\n      />\r\n\r\n      <Table\r\n        rowKey={(record: any) => record.id}\r\n        columns={col}\r\n        dataSource={filteredData}\r\n        loading={loading}\r\n        pagination={{\r\n          pageSize: pageSize,\r\n          showSizeChanger: true,\r\n          showLessItems: true,\r\n          pageSizeOptions: [\"5\", \"10\", \"25\", \"50\", \"100\"],\r\n          onChange: onPaginationChange,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}